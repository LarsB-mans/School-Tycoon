<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChalkboardDescription" xml:space="preserve">
    <value>Een vereiste voor ieder klaslokaal. Eigenlijk zou het niet eens een klaslokaal zijn zonder een van deze, maar gewoon een kamer. De armzalige schrijfruimte laat te wensen over.</value>
  </data>
  <data name="ChalkboardName" xml:space="preserve">
    <value>Krijtbord</value>
  </data>
  <data name="ClassroomBuilderCosts" xml:space="preserve">
    <value>Kosten: €{0}</value>
  </data>
  <data name="ClassroomBuilderTime" xml:space="preserve">
    <value>Bouwtijd: {0} dagen</value>
  </data>
  <data name="ClassroomLargeDescription" xml:space="preserve">
    <value>Een enorm klaslokaal met ruime plek voor ongeveer 48 leerlingen. Naast een toegeweid gebied voor groepactiviteiten is er een technologische hoek dat kan dienen als laboratorium of computerruimte.</value>
  </data>
  <data name="ClassroomLargeName" xml:space="preserve">
    <value>Klaslokaal (Groot)</value>
  </data>
  <data name="ClassroomMediumDescription" xml:space="preserve">
    <value>Een verlengd klaslokaal met plaats voor 36 leerlingen. De extra ruimte achterin biedt mogelijkheden groepen te vormen van 4 tafels, zogenaamde 'eilandjes', voor een aangenamere leeromgeving.</value>
  </data>
  <data name="ClassroomMediumName" xml:space="preserve">
    <value>Klaslokaal (Medium)</value>
  </data>
  <data name="ClassroomSmallDescription" xml:space="preserve">
    <value>Een compact klaslokaal dat plaatsen biedt voor 24 leerlingen. Er is net genoeg ruimte voor een schoolbord en wat kasten. Kan voor alle vakken gebruikt worden, maar is niet erg geschikt voor groepsactiviteiten.</value>
  </data>
  <data name="ClassroomSmallName" xml:space="preserve">
    <value>Klaslokaal (Klein)</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>{1} {0}, {3}e jaar</value>
    <comment>{0} = Month Name, {1} = Day Number, {2} = Day Number Suffix, {3} = Year Number</comment>
  </data>
  <data name="DoubleChalkboardDescription" xml:space="preserve">
    <value>A krijtbord dat je open kunt klappen voor extra schrijfruimte. Hierdoor kun je afbeeldingen tijdens een andere les opnieuw gebruiken, of het bord volkladderen met tekst.</value>
  </data>
  <data name="DoubleChalkboardName" xml:space="preserve">
    <value>Dubbel Krijtbord</value>
  </data>
  <data name="DoubleWhiteboardDescription" xml:space="preserve">
    <value>Een superlang witbord met schrijfruimte in overvloed. Hij kan opengeklapt worden om extra ruimte te kunnen gebruiken, of beschamend lelijke diagrammen te verbergen.</value>
  </data>
  <data name="DoubleWhiteboardName" xml:space="preserve">
    <value>Dubbel Witbord</value>
  </data>
  <data name="InteractiveWhiteboardDescription" xml:space="preserve">
    <value>Een schokkend handig enorm aanraakscherm verbonden met een computer, te gebruiken om webpaginas en afbeeldingen te tonen, of dit spel te spelen.</value>
  </data>
  <data name="InteractiveWhiteboardName" xml:space="preserve">
    <value>Interactief Witbord</value>
  </data>
  <data name="RockSlateDescription" xml:space="preserve">
    <value>Dit is een steen. Je beitelt er dingen op. Valt niet veel meer over te zeggen.

Beitel niet inbegrepen.</value>
  </data>
  <data name="RockSlateName" xml:space="preserve">
    <value>Leisteen</value>
  </data>
  <data name="WhiteboardDescription" xml:space="preserve">
    <value>Net een krijtbord, maar dan met inkt in plaats van krijt. Perfect voor kleurrijke grafieken, tabellen en plaatjes van dinosaurussen, maar er passen er niet veel van op.</value>
  </data>
  <data name="WhiteboardName" xml:space="preserve">
    <value>Witbord</value>
  </data>
</root>